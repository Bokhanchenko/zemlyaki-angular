"use strict";!function(e,r){function t(e){s&&e.get("$route")}function n(e,t,n){return{restrict:"ECA",terminal:!0,priority:400,transclude:"element",link:function(a,i,o,c,u){function s(){d&&(n.cancel(d),d=null),f&&(f.$destroy(),f=null),h&&(d=n.leave(h),d.done(function(e){!1!==e&&(d=null)}),h=null)}function l(){var o=e.current&&e.current.locals;if(r.isDefined(o&&o.$template)){var o=a.$new(),c=e.current;h=u(o,function(e){n.enter(e,null,h||i).done(function(e){!1===e||!r.isDefined($)||$&&!a.$eval($)||t()}),s()}),f=c.scope=o,f.$emit("$viewContentLoaded"),f.$eval(p)}else s()}var f,h,d,$=o.autoscroll,p=o.onload||"";a.$on("$routeChangeSuccess",l),l()}}}function a(e,r,t){return{restrict:"ECA",priority:-400,link:function(n,a){var i=t.current,o=i.locals;a.html(o.$template);var c=e(a.contents());if(i.controller){o.$scope=n;var u=r(i.controller,o);i.controllerAs&&(n[i.controllerAs]=u),a.data("$ngControllerController",u),a.children().data("$ngControllerController",u)}n[i.resolveAs||"$resolve"]=o,c(n)}}}var i,o,c,u,s,l=r.module("ngRoute",[]).info({angularVersion:"1.6.6"}).provider("$route",function(){function e(e,t){return r.extend(Object.create(e),t)}function t(e,r){var t=r.caseInsensitiveMatch,n={originalPath:e,regexp:e},a=n.keys=[];return e=e.replace(/([().])/g,"\\$1").replace(/(\/)?:(\w+)(\*\?|[?*])?/g,function(e,r,t,n){return e="?"===n||"*?"===n?"?":null,n="*"===n||"*?"===n?"*":null,a.push({name:t,optional:!!e}),r=r||"",""+(e?"":r)+"(?:"+(e?r:"")+(n&&"(.+?)"||"([^/]+)")+(e||"")+")"+(e||"")}).replace(/([\/$*])/g,"\\$1"),n.regexp=new RegExp("^"+e+"$",t?"i":""),n}i=r.isArray,o=r.isObject,c=r.isDefined,u=r.noop;var n={};this.when=function(e,a){var c;if(c=void 0,i(a)){c=c||[];for(var u=0,s=a.length;u<s;u++)c[u]=a[u]}else if(o(a))for(u in c=c||{},a)"$"===u.charAt(0)&&"$"===u.charAt(1)||(c[u]=a[u]);return c=c||a,r.isUndefined(c.reloadOnSearch)&&(c.reloadOnSearch=!0),r.isUndefined(c.caseInsensitiveMatch)&&(c.caseInsensitiveMatch=this.caseInsensitiveMatch),n[e]=r.extend(c,e&&t(e,c)),e&&(u="/"===e[e.length-1]?e.substr(0,e.length-1):e+"/",n[u]=r.extend({redirectTo:e},t(u,c))),this},this.caseInsensitiveMatch=!1,this.otherwise=function(e){return"string"==typeof e&&(e={redirectTo:e}),this.when(null,e),this},s=!0,this.eagerInstantiationEnabled=function(e){return c(e)?(s=e,this):s},this.$get=["$rootScope","$location","$routeParams","$q","$injector","$templateRequest","$sce","$browser",function(t,a,i,o,c,s,l,h){function d(e){var n=S.current;(R=(P=w())&&n&&P.$$route===n.$$route&&r.equals(P.pathParams,n.pathParams)&&!P.reloadOnSearch&&!x)||!n&&!P||t.$broadcast("$routeChangeStart",P,n).defaultPrevented&&e&&e.preventDefault()}function $(){var e=S.current,n=P;if(R)e.params=n.params,r.copy(e.params,i),t.$broadcast("$routeUpdate",e);else if(n||e){x=!1,S.current=n;var a=o.resolve(n);h.$$incOutstandingRequestCount(),a.then(p).then(v).then(function(o){return o&&a.then(g).then(function(a){n===S.current&&(n&&(n.locals=a,r.copy(n.params,i)),t.$broadcast("$routeChangeSuccess",n,e))})})["catch"](function(r){n===S.current&&t.$broadcast("$routeChangeError",n,e,r)})["finally"](function(){h.$$completeOutstandingRequest(u)})}}function p(e){var t={route:e,hasRedirection:!1};if(e)if(e.redirectTo)if(r.isString(e.redirectTo))t.path=C(e.redirectTo,e.params),t.search=e.params,t.hasRedirection=!0;else{var n=a.path(),i=a.search();e=e.redirectTo(e.pathParams,n,i),r.isDefined(e)&&(t.url=e,t.hasRedirection=!0)}else if(e.resolveRedirectTo)return o.resolve(c.invoke(e.resolveRedirectTo)).then(function(e){return r.isDefined(e)&&(t.url=e,t.hasRedirection=!0),t});return t}function v(e){var r=!0;if(e.route!==S.current)r=!1;else if(e.hasRedirection){var t=a.url(),n=e.url;n?a.url(n).replace():n=a.path(e.path).search(e.search).replace().url(),n!==t&&(r=!1)}return r}function g(e){if(e){var t=r.extend({},e.resolve);return r.forEach(t,function(e,n){t[n]=r.isString(e)?c.get(e):c.invoke(e,null,null,n)}),e=m(e),r.isDefined(e)&&(t.$template=e),o.all(t)}}function m(e){var t,n;return r.isDefined(t=e.template)?r.isFunction(t)&&(t=t(e.params)):r.isDefined(n=e.templateUrl)&&(r.isFunction(n)&&(n=n(e.params)),r.isDefined(n)&&(e.loadedTemplateUrl=l.valueOf(n),t=s(n))),t}function w(){var t,i;return r.forEach(n,function(n,o){var c;if(c=!i){var u=a.path();c=n.keys;var s={};if(n.regexp)if(u=n.regexp.exec(u)){for(var l=1,f=u.length;l<f;++l){var h=c[l-1],d=u[l];h&&d&&(s[h.name]=d)}c=s}else c=null;else c=null;c=t=c}c&&(i=e(n,{params:r.extend({},a.search(),t),pathParams:t}),i.$$route=n)}),i||n[null]&&e(n[null],{params:{},pathParams:{}})}function C(e,t){var n=[];return r.forEach((e||"").split(":"),function(e,r){if(0===r)n.push(e);else{var a=e.match(/(\w+)(?:[?*])?(.*)/),i=a[1];n.push(t[i]),n.push(a[2]||""),delete t[i]}}),n.join("")}var P,R,x=!1,S={routes:n,reload:function(){x=!0;var e={defaultPrevented:!1,preventDefault:function(){this.defaultPrevented=!0,x=!1}};t.$evalAsync(function(){d(e),e.defaultPrevented||$()})},updateParams:function(e){if(!this.current||!this.current.$$route)throw f("norout");e=r.extend({},this.current.params,e),a.path(C(this.current.$$route.originalPath,e)),a.search(e)}};return t.$on("$locationChangeStart",d),t.$on("$locationChangeSuccess",$),S}]}).run(t),f=r.$$minErr("ngRoute");t.$inject=["$injector"],l.provider("$routeParams",function(){this.$get=function(){return{}}}),l.directive("ngView",n),l.directive("ngView",a),n.$inject=["$route","$anchorScroll","$animate"],a.$inject=["$compile","$controller","$route"]}(window,window.angular);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNvZnQvYW5ndWxhci1yb3V0ZS5taW4uanMiXSwibmFtZXMiOlsiSiIsImQiLCJBIiwiayIsImdldCIsIkIiLCJ0IiwidSIsImciLCJyZXN0cmljdCIsInRlcm1pbmFsIiwicHJpb3JpdHkiLCJ0cmFuc2NsdWRlIiwibGluayIsImEiLCJmIiwiYiIsImMiLCJtIiwidiIsImwiLCJjYW5jZWwiLCJuIiwiJGRlc3Ryb3kiLCJwIiwibGVhdmUiLCJkb25lIiwiRSIsImN1cnJlbnQiLCJsb2NhbHMiLCJpc0RlZmluZWQiLCIkdGVtcGxhdGUiLCIkbmV3IiwiZW50ZXIiLCJ3IiwiJGV2YWwiLCJzY29wZSIsIiRlbWl0IiwiYXV0b3Njcm9sbCIsIm9ubG9hZCIsIiRvbiIsIkMiLCJodG1sIiwiY29udGVudHMiLCJjb250cm9sbGVyIiwiJHNjb3BlIiwiY29udHJvbGxlckFzIiwiZGF0YSIsImNoaWxkcmVuIiwicmVzb2x2ZUFzIiwieCIsInkiLCJGIiwiRyIsInoiLCJtb2R1bGUiLCJpbmZvIiwiYW5ndWxhclZlcnNpb24iLCJwcm92aWRlciIsImV4dGVuZCIsIk9iamVjdCIsImNyZWF0ZSIsImNhc2VJbnNlbnNpdGl2ZU1hdGNoIiwib3JpZ2luYWxQYXRoIiwicmVnZXhwIiwia2V5cyIsInJlcGxhY2UiLCJwdXNoIiwibmFtZSIsIm9wdGlvbmFsIiwiUmVnRXhwIiwiaXNBcnJheSIsImlzT2JqZWN0Iiwibm9vcCIsInRoaXMiLCJ3aGVuIiwibGVuZ3RoIiwiY2hhckF0IiwiaXNVbmRlZmluZWQiLCJyZWxvYWRPblNlYXJjaCIsInN1YnN0ciIsInJlZGlyZWN0VG8iLCJvdGhlcndpc2UiLCJlYWdlckluc3RhbnRpYXRpb25FbmFibGVkIiwiJGdldCIsImUiLCJoIiwicSIsInMiLCIkJHJvdXRlIiwiZXF1YWxzIiwicGF0aFBhcmFtcyIsIkQiLCIkYnJvYWRjYXN0IiwiZGVmYXVsdFByZXZlbnRlZCIsInByZXZlbnREZWZhdWx0IiwicGFyYW1zIiwiY29weSIsIkgiLCJyZXNvbHZlIiwiJCRpbmNPdXRzdGFuZGluZ1JlcXVlc3RDb3VudCIsInRoZW4iLCIkJGNvbXBsZXRlT3V0c3RhbmRpbmdSZXF1ZXN0Iiwicm91dGUiLCJoYXNSZWRpcmVjdGlvbiIsImlzU3RyaW5nIiwicGF0aCIsInNlYXJjaCIsInVybCIsInJlc29sdmVSZWRpcmVjdFRvIiwiaW52b2tlIiwiZm9yRWFjaCIsImFsbCIsInRlbXBsYXRlIiwiaXNGdW5jdGlvbiIsInRlbXBsYXRlVXJsIiwibG9hZGVkVGVtcGxhdGVVcmwiLCJ2YWx1ZU9mIiwiciIsImV4ZWMiLCJzcGxpdCIsIm1hdGNoIiwiam9pbiIsInJvdXRlcyIsInJlbG9hZCIsIiRldmFsQXN5bmMiLCJ1cGRhdGVQYXJhbXMiLCJJIiwicnVuIiwiJCRtaW5FcnIiLCIkaW5qZWN0IiwiZGlyZWN0aXZlIiwid2luZG93IiwiYW5ndWxhciJdLCJtYXBwaW5ncyI6IkFBQUEsY0FPQSxTQUFXQSxFQUFHQyxHQUVaLFFBQVNDLEdBQUVELEdBQ1RFLEdBQUtGLEVBQUVHLElBQUksVUFDWixRQUFTQyxHQUFFQyxFQUFHQyxFQUFHQyxHQUNoQixPQUFTQyxTQUFVLE1BQU9DLFVBQVUsRUFBSUMsU0FBVSxJQUFLQyxXQUFZLFVBQVdDLEtBQU0sU0FBY0MsRUFBR0MsRUFBR0MsRUFBR0MsRUFBR0MsR0FDMUcsUUFBU0MsS0FDUEMsSUFBTVosRUFBRWEsT0FBT0QsR0FBSUEsRUFBSSxNQUFNRSxJQUFNQSxFQUFFQyxXQUFZRCxFQUFJLE1BQU1FLElBQU1KLEVBQUlaLEVBQUVpQixNQUFNRCxHQUFJSixFQUFFTSxLQUFLLFNBQVVaLElBQ2hHLElBQU9BLElBQU1NLEVBQUksUUFDZkksRUFBSSxNQUNULFFBQVNHLEtBQ1IsR0FBSVgsR0FBSVYsRUFBRXNCLFNBQVd0QixFQUFFc0IsUUFBUUMsTUFBTyxJQUFJNUIsRUFBRTZCLFVBQVVkLEdBQUtBLEVBQUVlLFdBQVksQ0FDdkUsR0FBSWYsR0FBSUYsRUFBRWtCLE9BQ05mLEVBQUlYLEVBQUVzQixPQUFRSixH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WyJcInVzZSBzdHJpY3RcIjtcclxuXHJcbi8qXHJcbiBBbmd1bGFySlMgdjEuNi42XHJcbiAoYykgMjAxMC0yMDE3IEdvb2dsZSwgSW5jLiBodHRwOi8vYW5ndWxhcmpzLm9yZ1xyXG4gTGljZW5zZTogTUlUXHJcbiovXHJcbihmdW5jdGlvbiAoSiwgZCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuICBmdW5jdGlvbiBBKGQpIHtcclxuICAgIGsgJiYgZC5nZXQoXCIkcm91dGVcIik7XHJcbiAgfWZ1bmN0aW9uIEIodCwgdSwgZykge1xyXG4gICAgcmV0dXJuIHsgcmVzdHJpY3Q6IFwiRUNBXCIsIHRlcm1pbmFsOiAhMCwgcHJpb3JpdHk6IDQwMCwgdHJhbnNjbHVkZTogXCJlbGVtZW50XCIsIGxpbms6IGZ1bmN0aW9uIGxpbmsoYSwgZiwgYiwgYywgbSkge1xyXG4gICAgICAgIGZ1bmN0aW9uIHYoKSB7XHJcbiAgICAgICAgICBsICYmIChnLmNhbmNlbChsKSwgbCA9IG51bGwpO24gJiYgKG4uJGRlc3Ryb3koKSwgbiA9IG51bGwpO3AgJiYgKGwgPSBnLmxlYXZlKHApLCBsLmRvbmUoZnVuY3Rpb24gKGEpIHtcclxuICAgICAgICAgICAgITEgIT09IGEgJiYgKGwgPSBudWxsKTtcclxuICAgICAgICAgIH0pLCBwID0gbnVsbCk7XHJcbiAgICAgICAgfWZ1bmN0aW9uIEUoKSB7XHJcbiAgICAgICAgICB2YXIgYiA9IHQuY3VycmVudCAmJiB0LmN1cnJlbnQubG9jYWxzO2lmIChkLmlzRGVmaW5lZChiICYmIGIuJHRlbXBsYXRlKSkge1xyXG4gICAgICAgICAgICB2YXIgYiA9IGEuJG5ldygpLFxyXG4gICAgICAgICAgICAgICAgYyA9IHQuY3VycmVudDtwID0gbShiLCBmdW5jdGlvbiAoYikge1xyXG4gICAgICAgICAgICAgIGcuZW50ZXIoYiwgbnVsbCwgcCB8fCBmKS5kb25lKGZ1bmN0aW9uIChiKSB7XHJcbiAgICAgICAgICAgICAgICAhMSA9PT0gYiB8fCAhZC5pc0RlZmluZWQodykgfHwgdyAmJiAhYS4kZXZhbCh3KSB8fCB1KCk7XHJcbiAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgdigpO1xyXG4gICAgICAgICAgICB9KTtuID0gYy5zY29wZSA9IGI7bi4kZW1pdChcIiR2aWV3Q29udGVudExvYWRlZFwiKTtuLiRldmFsKGspO1xyXG4gICAgICAgICAgfSBlbHNlIHYoKTtcclxuICAgICAgICB9dmFyIG4sXHJcbiAgICAgICAgICAgIHAsXHJcbiAgICAgICAgICAgIGwsXHJcbiAgICAgICAgICAgIHcgPSBiLmF1dG9zY3JvbGwsXHJcbiAgICAgICAgICAgIGsgPSBiLm9ubG9hZCB8fCBcIlwiO2EuJG9uKFwiJHJvdXRlQ2hhbmdlU3VjY2Vzc1wiLCBFKTtFKCk7XHJcbiAgICAgIH0gfTtcclxuICB9ZnVuY3Rpb24gQyhkLCBrLCBnKSB7XHJcbiAgICByZXR1cm4geyByZXN0cmljdDogXCJFQ0FcIiwgcHJpb3JpdHk6IC00MDAsIGxpbms6IGZ1bmN0aW9uIGxpbmsoYSwgZikge1xyXG4gICAgICAgIHZhciBiID0gZy5jdXJyZW50LFxyXG4gICAgICAgICAgICBjID0gYi5sb2NhbHM7Zi5odG1sKGMuJHRlbXBsYXRlKTt2YXIgbSA9IGQoZi5jb250ZW50cygpKTtpZiAoYi5jb250cm9sbGVyKSB7XHJcbiAgICAgICAgICBjLiRzY29wZSA9IGE7dmFyIHYgPSBrKGIuY29udHJvbGxlciwgYyk7Yi5jb250cm9sbGVyQXMgJiYgKGFbYi5jb250cm9sbGVyQXNdID0gdik7Zi5kYXRhKFwiJG5nQ29udHJvbGxlckNvbnRyb2xsZXJcIiwgdik7Zi5jaGlsZHJlbigpLmRhdGEoXCIkbmdDb250cm9sbGVyQ29udHJvbGxlclwiLCB2KTtcclxuICAgICAgICB9YVtiLnJlc29sdmVBcyB8fCBcIiRyZXNvbHZlXCJdID0gYzttKGEpO1xyXG4gICAgICB9IH07XHJcbiAgfXZhciB4LFxyXG4gICAgICB5LFxyXG4gICAgICBGLFxyXG4gICAgICBHLFxyXG4gICAgICB6ID0gZC5tb2R1bGUoXCJuZ1JvdXRlXCIsIFtdKS5pbmZvKHsgYW5ndWxhclZlcnNpb246IFwiMS42LjZcIiB9KS5wcm92aWRlcihcIiRyb3V0ZVwiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiB0KGEsIGYpIHtcclxuICAgICAgcmV0dXJuIGQuZXh0ZW5kKE9iamVjdC5jcmVhdGUoYSksIGYpO1xyXG4gICAgfWZ1bmN0aW9uIHUoYSwgZCkge1xyXG4gICAgICB2YXIgYiA9IGQuY2FzZUluc2Vuc2l0aXZlTWF0Y2gsXHJcbiAgICAgICAgICBjID0geyBvcmlnaW5hbFBhdGg6IGEsIHJlZ2V4cDogYSB9LFxyXG4gICAgICAgICAgZyA9IGMua2V5cyA9IFtdO2EgPSBhLnJlcGxhY2UoLyhbKCkuXSkvZywgXCJcXFxcJDFcIikucmVwbGFjZSgvKFxcLyk/OihcXHcrKShcXCpcXD98Wz8qXSk/L2csIGZ1bmN0aW9uIChhLCBiLCBkLCBjKSB7XHJcbiAgICAgICAgYSA9IFwiP1wiID09PSBjIHx8IFwiKj9cIiA9PT0gYyA/IFwiP1wiIDogbnVsbDtjID0gXCIqXCIgPT09IGMgfHwgXCIqP1wiID09PSBjID8gXCIqXCIgOiBudWxsO2cucHVzaCh7IG5hbWU6IGQsIG9wdGlvbmFsOiAhIWEgfSk7YiA9IGIgfHwgXCJcIjtyZXR1cm4gXCJcIiArIChhID8gXCJcIiA6IGIpICsgXCIoPzpcIiArIChhID8gYiA6IFwiXCIpICsgKGMgJiYgXCIoLis/KVwiIHx8IFwiKFteL10rKVwiKSArIChhIHx8IFwiXCIpICsgXCIpXCIgKyAoYSB8fCBcIlwiKTtcclxuICAgICAgfSkucmVwbGFjZSgvKFsvJCpdKS9nLCBcIlxcXFwkMVwiKTtjLnJlZ2V4cCA9IG5ldyBSZWdFeHAoXCJeXCIgKyBhICsgXCIkXCIsIGIgPyBcImlcIiA6IFwiXCIpO3JldHVybiBjO1xyXG4gICAgfXggPSBkLmlzQXJyYXk7eSA9IGQuaXNPYmplY3Q7RiA9IGQuaXNEZWZpbmVkO0cgPSBkLm5vb3A7dmFyIGcgPSB7fTt0aGlzLndoZW4gPSBmdW5jdGlvbiAoYSwgZikge1xyXG4gICAgICB2YXIgYjtiID0gdm9pZCAwO2lmICh4KGYpKSB7XHJcbiAgICAgICAgYiA9IGIgfHwgW107Zm9yICh2YXIgYyA9IDAsIG0gPSBmLmxlbmd0aDsgYyA8IG07IGMrKykge1xyXG4gICAgICAgICAgYltjXSA9IGZbY107XHJcbiAgICAgICAgfVxyXG4gICAgICB9IGVsc2UgaWYgKHkoZikpIGZvciAoYyBpbiBiID0gYiB8fCB7fSwgZikge1xyXG4gICAgICAgIGlmIChcIiRcIiAhPT0gYy5jaGFyQXQoMCkgfHwgXCIkXCIgIT09IGMuY2hhckF0KDEpKSBiW2NdID0gZltjXTtcclxuICAgICAgfWIgPSBiIHx8IGY7ZC5pc1VuZGVmaW5lZChiLnJlbG9hZE9uU2VhcmNoKSAmJiAoYi5yZWxvYWRPblNlYXJjaCA9ICEwKTtkLmlzVW5kZWZpbmVkKGIuY2FzZUluc2Vuc2l0aXZlTWF0Y2gpICYmIChiLmNhc2VJbnNlbnNpdGl2ZU1hdGNoID0gdGhpcy5jYXNlSW5zZW5zaXRpdmVNYXRjaCk7Z1thXSA9IGQuZXh0ZW5kKGIsIGEgJiYgdShhLCBiKSk7YSAmJiAoYyA9IFwiL1wiID09PSBhW2EubGVuZ3RoIC0gMV0gPyBhLnN1YnN0cigwLCBhLmxlbmd0aCAtIDEpIDogYSArIFwiL1wiLCBnW2NdID0gZC5leHRlbmQoeyByZWRpcmVjdFRvOiBhIH0sIHUoYywgYikpKTtyZXR1cm4gdGhpcztcclxuICAgIH07dGhpcy5jYXNlSW5zZW5zaXRpdmVNYXRjaCA9ICExO3RoaXMub3RoZXJ3aXNlID0gZnVuY3Rpb24gKGEpIHtcclxuICAgICAgXCJzdHJpbmdcIiA9PT0gdHlwZW9mIGEgJiYgKGEgPSB7IHJlZGlyZWN0VG86IGEgfSk7dGhpcy53aGVuKG51bGwsIGEpO3JldHVybiB0aGlzO1xyXG4gICAgfTtrID0gITA7dGhpcy5lYWdlckluc3RhbnRpYXRpb25FbmFibGVkID0gZnVuY3Rpb24gKGEpIHtcclxuICAgICAgcmV0dXJuIEYoYSkgPyAoayA9IGEsIHRoaXMpIDogaztcclxuICAgIH07dGhpcy4kZ2V0ID0gW1wiJHJvb3RTY29wZVwiLCBcIiRsb2NhdGlvblwiLCBcIiRyb3V0ZVBhcmFtc1wiLCBcIiRxXCIsIFwiJGluamVjdG9yXCIsIFwiJHRlbXBsYXRlUmVxdWVzdFwiLCBcIiRzY2VcIiwgXCIkYnJvd3NlclwiLCBmdW5jdGlvbiAoYSwgZiwgYiwgYywgbSwgaywgdSwgbikge1xyXG4gICAgICBmdW5jdGlvbiBwKGUpIHtcclxuICAgICAgICB2YXIgaCA9IHEuY3VycmVudDsoeSA9IChzID0gQygpKSAmJiBoICYmIHMuJCRyb3V0ZSA9PT0gaC4kJHJvdXRlICYmIGQuZXF1YWxzKHMucGF0aFBhcmFtcywgaC5wYXRoUGFyYW1zKSAmJiAhcy5yZWxvYWRPblNlYXJjaCAmJiAhRCkgfHwgIWggJiYgIXMgfHwgYS4kYnJvYWRjYXN0KFwiJHJvdXRlQ2hhbmdlU3RhcnRcIiwgcywgaCkuZGVmYXVsdFByZXZlbnRlZCAmJiBlICYmIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgfWZ1bmN0aW9uIGwoKSB7XHJcbiAgICAgICAgdmFyIGUgPSBxLmN1cnJlbnQsXHJcbiAgICAgICAgICAgIGggPSBzO2lmICh5KSBlLnBhcmFtcyA9IGgucGFyYW1zLCBkLmNvcHkoZS5wYXJhbXMsIGIpLCBhLiRicm9hZGNhc3QoXCIkcm91dGVVcGRhdGVcIiwgZSk7ZWxzZSBpZiAoaCB8fCBlKSB7XHJcbiAgICAgICAgICBEID0gITE7cS5jdXJyZW50ID0gaDt2YXIgSCA9IGMucmVzb2x2ZShoKTtuLiQkaW5jT3V0c3RhbmRpbmdSZXF1ZXN0Q291bnQoKTtILnRoZW4odykudGhlbih6KS50aGVuKGZ1bmN0aW9uIChjKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBjICYmIEgudGhlbihBKS50aGVuKGZ1bmN0aW9uIChjKSB7XHJcbiAgICAgICAgICAgICAgaCA9PT0gcS5jdXJyZW50ICYmIChoICYmIChoLmxvY2FscyA9IGMsIGQuY29weShoLnBhcmFtcywgYikpLCBhLiRicm9hZGNhc3QoXCIkcm91dGVDaGFuZ2VTdWNjZXNzXCIsIGgsIGUpKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoYikge1xyXG4gICAgICAgICAgICBoID09PSBxLmN1cnJlbnQgJiYgYS4kYnJvYWRjYXN0KFwiJHJvdXRlQ2hhbmdlRXJyb3JcIiwgaCwgZSwgYik7XHJcbiAgICAgICAgICB9KS5maW5hbGx5KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgbi4kJGNvbXBsZXRlT3V0c3RhbmRpbmdSZXF1ZXN0KEcpO1xyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9ZnVuY3Rpb24gdyhlKSB7XHJcbiAgICAgICAgdmFyIGEgPSB7IHJvdXRlOiBlLCBoYXNSZWRpcmVjdGlvbjogITEgfTtpZiAoZSkgaWYgKGUucmVkaXJlY3RUbykge1xyXG4gICAgICAgICAgaWYgKGQuaXNTdHJpbmcoZS5yZWRpcmVjdFRvKSkgYS5wYXRoID0geChlLnJlZGlyZWN0VG8sIGUucGFyYW1zKSwgYS5zZWFyY2ggPSBlLnBhcmFtcywgYS5oYXNSZWRpcmVjdGlvbiA9ICEwO2Vsc2Uge1xyXG4gICAgICAgICAgICB2YXIgYiA9IGYucGF0aCgpLFxyXG4gICAgICAgICAgICAgICAgZyA9IGYuc2VhcmNoKCk7ZSA9IGUucmVkaXJlY3RUbyhlLnBhdGhQYXJhbXMsIGIsIGcpO2QuaXNEZWZpbmVkKGUpICYmIChhLnVybCA9IGUsIGEuaGFzUmVkaXJlY3Rpb24gPSAhMCk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIGlmIChlLnJlc29sdmVSZWRpcmVjdFRvKSByZXR1cm4gYy5yZXNvbHZlKG0uaW52b2tlKGUucmVzb2x2ZVJlZGlyZWN0VG8pKS50aGVuKGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICBkLmlzRGVmaW5lZChlKSAmJiAoYS51cmwgPSBlLCBhLmhhc1JlZGlyZWN0aW9uID0gITApO3JldHVybiBhO1xyXG4gICAgICAgIH0pO3JldHVybiBhO1xyXG4gICAgICB9XHJcbiAgICAgIGZ1bmN0aW9uIHooYSkge1xyXG4gICAgICAgIHZhciBiID0gITA7aWYgKGEucm91dGUgIT09IHEuY3VycmVudCkgYiA9ICExO2Vsc2UgaWYgKGEuaGFzUmVkaXJlY3Rpb24pIHtcclxuICAgICAgICAgIHZhciBkID0gZi51cmwoKSxcclxuICAgICAgICAgICAgICBjID0gYS51cmw7YyA/IGYudXJsKGMpLnJlcGxhY2UoKSA6IGMgPSBmLnBhdGgoYS5wYXRoKS5zZWFyY2goYS5zZWFyY2gpLnJlcGxhY2UoKS51cmwoKTtjICE9PSBkICYmIChiID0gITEpO1xyXG4gICAgICAgIH1yZXR1cm4gYjtcclxuICAgICAgfWZ1bmN0aW9uIEEoYSkge1xyXG4gICAgICAgIGlmIChhKSB7XHJcbiAgICAgICAgICB2YXIgYiA9IGQuZXh0ZW5kKHt9LCBhLnJlc29sdmUpO2QuZm9yRWFjaChiLCBmdW5jdGlvbiAoYSwgZSkge1xyXG4gICAgICAgICAgICBiW2VdID0gZC5pc1N0cmluZyhhKSA/IG0uZ2V0KGEpIDogbS5pbnZva2UoYSwgbnVsbCwgbnVsbCwgZSk7XHJcbiAgICAgICAgICB9KTthID0gQihhKTtkLmlzRGVmaW5lZChhKSAmJiAoYi4kdGVtcGxhdGUgPSBhKTtyZXR1cm4gYy5hbGwoYik7XHJcbiAgICAgICAgfVxyXG4gICAgICB9ZnVuY3Rpb24gQihhKSB7XHJcbiAgICAgICAgdmFyIGIsIGM7ZC5pc0RlZmluZWQoYiA9IGEudGVtcGxhdGUpID8gZC5pc0Z1bmN0aW9uKGIpICYmIChiID0gYihhLnBhcmFtcykpIDogZC5pc0RlZmluZWQoYyA9IGEudGVtcGxhdGVVcmwpICYmIChkLmlzRnVuY3Rpb24oYykgJiYgKGMgPSBjKGEucGFyYW1zKSksIGQuaXNEZWZpbmVkKGMpICYmIChhLmxvYWRlZFRlbXBsYXRlVXJsID0gdS52YWx1ZU9mKGMpLCBiID0gayhjKSkpO3JldHVybiBiO1xyXG4gICAgICB9ZnVuY3Rpb24gQygpIHtcclxuICAgICAgICB2YXIgYSwgYjtkLmZvckVhY2goZywgZnVuY3Rpb24gKGMsIGcpIHtcclxuICAgICAgICAgIHZhciByO2lmIChyID0gIWIpIHtcclxuICAgICAgICAgICAgdmFyIGsgPSBmLnBhdGgoKTtyID0gYy5rZXlzO3ZhciBtID0ge307aWYgKGMucmVnZXhwKSB7XHJcbiAgICAgICAgICAgICAgaWYgKGsgPSBjLnJlZ2V4cC5leGVjKGspKSB7XHJcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBsID0gMSwgbiA9IGsubGVuZ3RoOyBsIDwgbjsgKytsKSB7XHJcbiAgICAgICAgICAgICAgICAgIHZhciBwID0gcltsIC0gMV0sXHJcbiAgICAgICAgICAgICAgICAgICAgICBxID0ga1tsXTtwICYmIHEgJiYgKG1bcC5uYW1lXSA9IHEpO1xyXG4gICAgICAgICAgICAgICAgfXIgPSBtO1xyXG4gICAgICAgICAgICAgIH0gZWxzZSByID0gbnVsbDtcclxuICAgICAgICAgICAgfSBlbHNlIHIgPSBudWxsO3IgPSBhID0gcjtcclxuICAgICAgICAgIH1yICYmIChiID0gdChjLCB7IHBhcmFtczogZC5leHRlbmQoe30sIGYuc2VhcmNoKCksIGEpLCBwYXRoUGFyYW1zOiBhIH0pLCBiLiQkcm91dGUgPSBjKTtcclxuICAgICAgICB9KTtyZXR1cm4gYiB8fCBnW251bGxdICYmIHQoZ1tudWxsXSwgeyBwYXJhbXM6IHt9LCBwYXRoUGFyYW1zOiB7fSB9KTtcclxuICAgICAgfWZ1bmN0aW9uIHgoYSwgYikge1xyXG4gICAgICAgIHZhciBjID0gW107ZC5mb3JFYWNoKChhIHx8IFwiXCIpLnNwbGl0KFwiOlwiKSwgZnVuY3Rpb24gKGEsIGQpIHtcclxuICAgICAgICAgIGlmICgwID09PSBkKSBjLnB1c2goYSk7ZWxzZSB7XHJcbiAgICAgICAgICAgIHZhciBlID0gYS5tYXRjaCgvKFxcdyspKD86Wz8qXSk/KC4qKS8pLFxyXG4gICAgICAgICAgICAgICAgZiA9IGVbMV07Yy5wdXNoKGJbZl0pO2MucHVzaChlWzJdIHx8IFwiXCIpO2RlbGV0ZSBiW2ZdO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO3JldHVybiBjLmpvaW4oXCJcIik7XHJcbiAgICAgIH12YXIgRCA9ICExLFxyXG4gICAgICAgICAgcyxcclxuICAgICAgICAgIHksXHJcbiAgICAgICAgICBxID0geyByb3V0ZXM6IGcsIHJlbG9hZDogZnVuY3Rpb24gcmVsb2FkKCkge1xyXG4gICAgICAgICAgRCA9ICEwO3ZhciBiID0geyBkZWZhdWx0UHJldmVudGVkOiAhMSwgcHJldmVudERlZmF1bHQ6IGZ1bmN0aW9uIHByZXZlbnREZWZhdWx0KCkge1xyXG4gICAgICAgICAgICAgIHRoaXMuZGVmYXVsdFByZXZlbnRlZCA9ICEwO0QgPSAhMTtcclxuICAgICAgICAgICAgfSB9O2EuJGV2YWxBc3luYyhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHAoYik7Yi5kZWZhdWx0UHJldmVudGVkIHx8IGwoKTtcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0sIHVwZGF0ZVBhcmFtczogZnVuY3Rpb24gdXBkYXRlUGFyYW1zKGEpIHtcclxuICAgICAgICAgIGlmICh0aGlzLmN1cnJlbnQgJiYgdGhpcy5jdXJyZW50LiQkcm91dGUpIGEgPSBkLmV4dGVuZCh7fSwgdGhpcy5jdXJyZW50LnBhcmFtcywgYSksIGYucGF0aCh4KHRoaXMuY3VycmVudC4kJHJvdXRlLm9yaWdpbmFsUGF0aCwgYSkpLCBmLnNlYXJjaChhKTtlbHNlIHRocm93IEkoXCJub3JvdXRcIik7XHJcbiAgICAgICAgfSB9O2EuJG9uKFwiJGxvY2F0aW9uQ2hhbmdlU3RhcnRcIiwgcCk7YS4kb24oXCIkbG9jYXRpb25DaGFuZ2VTdWNjZXNzXCIsIGwpO3JldHVybiBxO1xyXG4gICAgfV07XHJcbiAgfSkucnVuKEEpLFxyXG4gICAgICBJID0gZC4kJG1pbkVycihcIm5nUm91dGVcIiksXHJcbiAgICAgIGs7QS4kaW5qZWN0ID0gW1wiJGluamVjdG9yXCJdO3oucHJvdmlkZXIoXCIkcm91dGVQYXJhbXNcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgdGhpcy4kZ2V0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICByZXR1cm4ge307XHJcbiAgICB9O1xyXG4gIH0pO3ouZGlyZWN0aXZlKFwibmdWaWV3XCIsIEIpO3ouZGlyZWN0aXZlKFwibmdWaWV3XCIsIEMpO0IuJGluamVjdCA9IFtcIiRyb3V0ZVwiLCBcIiRhbmNob3JTY3JvbGxcIiwgXCIkYW5pbWF0ZVwiXTtDLiRpbmplY3QgPSBbXCIkY29tcGlsZVwiLCBcIiRjb250cm9sbGVyXCIsIFwiJHJvdXRlXCJdO1xyXG59KSh3aW5kb3csIHdpbmRvdy5hbmd1bGFyKTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YW5ndWxhci1yb3V0ZS5taW4uanMubWFwIl19
